apply plugin: 'java'

String dstEncoding="cp1251"
String srcEncoding="utf-8"

String outDir = "build/hunspell"


repositories {
    mavenCentral()
}


task wordlist << {
	def dictDir = file("../../data/dict")
	
	def files = dictDir.listFiles().findAll { 
	    it.name.endsWith('.lst') && ! (it.name =~ /composite|dot-abbr|twisters|ignored|alt|rare/)
	}
	
	logger.lifecycle("Dict files: " + files*.name)
	
	def lines = files.collect {
	    it.text.split("\n")
	}
	.flatten()
	.collect {
	    it = it.replaceFirst(/ *#.*/, '').trim()
	    if( ! it )
	        return ''
	    
	    if( ! it.contains("/") ) {
	        if( it.startsWith("+cs") ) {
	            it = it.replaceFirst(/\+cs=([^ ]*).*/, '$1/ac')
	        }
	        else {
	            it = it.split()[0]
	        }
	    }
	    else if( it.contains(" /adj") ) {
	        if( it.contains(" /adj_pos") )
	            return ''
	    
	        // TODO: handle filter 'g=m'
	        it = it.replaceFirst(' /adj(\\.adv)?.*', '/a$1').replaceFirst(/\.adv/, 'w')

	        if( it.contains("лиций/a") ) {
	            it = it.replace('/a', '/b')
	        }
	        
	        it
	    }
	    else if( it.contains(" /numr") ) {
	        it = it.replaceFirst(' /numr.*', '/n')
	    }
	    else if( it.contains(" /n10") ) {
	        it = it.replace(' /n10', '/e')
	        it = it.replace(' /.ko', '/f')
	        it = it.replace(' /.p1', '/g')
	        it = it.replace(' /.p2', '/h')
	        it = it.replace(' /.piv', '/i')
	        it = it.replaceFirst(/[. ].*/, '')
	    }
	    else if( it.contains(" /n40") ) {
	        it = it.replace(' /n40', '/j')
	        it = it.replace(' /.p', '/k')
	        it = it.replaceFirst(/[. ].*/, '')
	    }
	    else { '' }
	}.grep { 
	    it
	}

    def words = lines.unique()

    println "Found ${words.size} words"
    def txt = "${words.size}\n"
    txt += words.toSorted().join("\n")
	new File("$outDir/uk_UA.dic").text = txt
}


task affixes {
    def outFile = "$outDir/uk_UA.aff"

    inputs.file files("affix/*.aff")
//    outputs.file outFile

    doLast {

    new File(outDir).mkdirs()
    
    def txt = new File('header/affix_header.txt').text

	def files = new File('affix').listFiles().findAll { 
	    it.name.endsWith('.aff')
	}.each {
	    logger.lifecycle("Affix file: $it")
	    txt += it.text.replaceAll(/[ \t]*#.*/, '').replaceAll(/\n([ \t]*\n)+/, "\n")
	    if( ! txt.endsWith("\n") ) {
	        txt += "\n"
	    }
	}
	
	new File(outFile).text = txt
	}
}


task hunspell (dependsOn: [affixes, wordlist]) {
}


task testHunspell (type: Exec) { //, dependsOn: hunspell) {
    def cmd = "echo \"головатий білого швидко вже хата дами вимені\" | hunspell -d $outDir/uk_UA"

    commandLine "sh", "-c", "${cmd}"
}
