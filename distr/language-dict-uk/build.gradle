apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

version = '3.2-SNAPSHOT'
group = 'org.languagetool'

String langCode="uk"
String packageDir="org/languagetool/resource/" + langCode
String resourceDir="src/main/resources/" + packageDir
String outputDir="build/resources/main/" + packageDir

String inputDir="../../out/prev"
String dstEncoding="cp1251"
String srcEncoding="utf-8"

String tmpDir="build/tmp"


repositories {
    mavenLocal()
    mavenCentral()
}

configurations{
  provided {
        description = 'Configuration for generating the dictionaries'
  }
}

dependencies {
    provided 'org.languagetool:languagetool-tools:3.2-SNAPSHOT'
}


task createTagList(type: Exec) {
    def srcDict="${inputDir}/dict_rules_lt.txt"
    def outFile="${outputDir}/ukrainian_tags.txt"

    inputs.file srcDict
    outputs.file outFile

    workingDir "$projectDir"

    doFirst {
        new File(outputDir).mkdirs()
    }

    def cmd = "cat ${srcDict} | awk '{ print \$3 }' | sort -u > ${outFile}"

    commandLine "bash", "-c", "${cmd}"
}

task prepareDict(type: Exec) {
    def srcDict="${inputDir}/dict_rules_lt.txt"
    def outFile="${tmpDir}/all.tagged.tmp"

    inputs.file srcDict
    outputs.file outFile

    workingDir "$projectDir"

    doFirst {
        new File(tmpDir).mkdirs()
    }

    def cmd = "cat ${srcDict} | iconv -f ${srcEncoding} -t ${dstEncoding} | tr ' ' '\\t' | LC_ALL=POSIX sort -u > ${outFile}"

    commandLine "bash", "-c", "${cmd}"
}

task createPOSDict(type: JavaExec, dependsOn: prepareDict) {
    def outputDict="${outputDir}/ukrainian.dict"

    inputs.file tasks.prepareDict.outputs.files[0]
    outputs.file outputDict

    workingDir "$projectDir"

    doFirst {
        new File(outputDir).mkdirs()
    }

    classpath = files(configurations.provided.files)
    main = 'org.languagetool.tools.POSDictionaryBuilder'

    args "-i", "${tmpDir}/all.tagged.tmp"
    args "-info", "${resourceDir}/ukrainian.info"
    args "-o", "${outputDict}"
}

task createSynthDict(type: JavaExec, dependsOn: prepareDict) {
    def outputDict="${outputDir}/ukrainian_synth.dict"

    inputs.file tasks.prepareDict.outputs.files[0]
    outputs.file outputDict

    workingDir "$projectDir"

    doFirst {
        new File(outputDir).mkdirs()
    }

    classpath = files(configurations.provided.files)
    main = 'org.languagetool.tools.SynthDictionaryBuilder'

    args "-i", "${tmpDir}/all.tagged.tmp"
    args "-info", "src/main/resources/" + packageDir + "/ukrainian_synth.info"
    args "-o", "${outputDict}"
}

task prepareSpellDict(type: Exec) {
    def srcDict="${inputDir}/words_spell.txt"
    def tmpFile="${tmpDir}/all.words.tmp"

    inputs.file srcDict
    outputs.file tmpFile

    workingDir "$projectDir"

    doFirst {
        new File(tmpDir).mkdirs()
    }

    def cmd = "cat ${srcDict} | iconv -f ${srcEncoding} -t ${dstEncoding} | LC_ALL=POSIX sort -u > ${tmpFile}"

    commandLine "bash", "-c", "${cmd}"
}


task createSpellDict(type: JavaExec, dependsOn: prepareSpellDict) {
    def srcDict=tasks.prepareSpellDict.outputs.files[0]
    def spellOutDir="${outputDir}/hunspell"
    def outputDict="${spellOutDir}/uk_UA.dict"
    def freqFile="src/main/data/uk_wordlist.xml"

    inputs.file srcDict
    outputs.file outputDict

    workingDir "$projectDir"

    doFirst {
        new File(spellOutDir).mkdirs()
    }

    classpath = files(configurations.provided.files)
    main = 'org.languagetool.tools.SpellDictionaryBuilder'

    args "-i", "${srcDict}"
    args "-info", "${resourceDir}/hunspell/uk_UA.info"
    args "-o", "${outputDict}"
    args "-freq", "${freqFile}"
}


processResources.dependsOn(createPOSDict, createSynthDict, createSpellDict, createTagList)


jar {
    manifest {
        attributes 'Implementation-Title': 'Ukrainian dictionary for LanguageTool',
                   'Implementation-Version': version
    }
}

publishing {
    repositories {
        mavenLocal()
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
