apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'

version = '0.9.1-SNAPSHOT'
group = 'org.languagetool'


String outputDir="build/resources/main/org/languagetool/resource/uk"
String inputDir="../../out/prev"
String dstEncoding="cp1251"
String srcEncoding="utf-8"
String tmpDir="build/tmp"


repositories {
    mavenLocal()
    mavenCentral()
}

configurations{
  provided {
        description = 'Configuration for generating the dictionaries'
  }
}

dependencies {
    provided 'org.languagetool:languagetool-tools:3.2-SNAPSHOT'
//    provided 'org.languagetool:language-uk:3.2-SNAPSHOT'
}



task prepareDict(type: Exec) {
    def srcDict="${inputDir}/dict_rules_lt.txt"
    def outFile="${tmpDir}/all.tagged.tmp"

    inputs.file srcDict
    outputs.file outFile

    workingDir "$projectDir"

    new File(outputDir).mkdirs()
    new File(tmpDir).mkdirs()

    println "Preparing data..."

    def cmd = "cat ${srcDict} | iconv -f ${srcEncoding} -t ${dstEncoding} | tr ' ' '\\t' | LC_ALL=POSIX sort -u > ${outFile}"
    cmd += " ; cat ${srcDict} | awk '{ print \$3 }' | sort | uniq > ${outputDir}/ukrainian_tags.txt"

    commandLine "bash", "-c", "${cmd}"
}

task createPOSDict(type: Exec, dependsOn: prepareDict) {
    def HOME = System.properties['user.home']
    def MFL_JAR_DIR="${HOME}/work/ukr/spelling/grammar/morfologik-distribution-1.9.0"
    def MFL_JAR="morfologik-tools-*.jar"
    def MFL_CMD="java -jar ${MFL_JAR_DIR}/${MFL_JAR}"
    def FSA_FLAGS="-f cfsa2"

    def outputDict="${outputDir}/ukrainian.dict"

    inputs.file tasks.prepareDict.outputs.files
    outputs.file outputDict

    workingDir "$projectDir"

    def cmd = "${MFL_CMD} tab2morph -i ${inputs.files[0]} |"
    cmd += " ${MFL_CMD} fsa_build ${FSA_FLAGS} -o ${outputDict} 2>&1 | iconv -f ${dstEncoding} > fsa_build.out"

    commandLine "bash", "-c", "${cmd}"
}

task createSynthDict(type: Exec) {
    def HOME = System.properties['user.home']
    def MFL_JAR_DIR="${HOME}/work/ukr/spelling/grammar/morfologik-distribution-1.9.0"
    def MFL_JAR="morfologik-tools-*.jar"
    def MFL_CMD="java -jar ${MFL_JAR_DIR}/${MFL_JAR}"
    def FSA_FLAGS="-f cfsa2"

    def outputDict="${outputDir}/ukrainian_synth.dict"

    inputs.file tasks.prepareDict.outputs.files
    outputs.file outputDict

    workingDir "$projectDir"

    def cmd = "cat ${tmpDir}/all.tagged.tmp | " + 'awk -F "\t" \'{print $2"|"$3"\t"$1"\t"}\' |'
    cmd += " ${MFL_CMD} tab2morph |"
    cmd += " ${MFL_CMD} fsa_build ${FSA_FLAGS} -o ${outputDict} 2>&1 | iconv -f ${dstEncoding} > fsa_build_sync.out "

    commandLine "bash", "-c", "${cmd}"
}

task createSpellDict(type: Exec) {
    def srcDict="${inputDir}/words.txt"
    def spellOutDir="${outputDir}/hunspell"
    def outFile="${spellOutDir}/uk_UA.dict"
    def tmpFile="${tmpDir}/all.words.tmp"

    inputs.file srcDict
    outputs.file outFile

    workingDir "$projectDir"

    new File(spellOutDir).mkdirs()

    def classpath = configurations.provided.files.join(":")

    def cmd = "cat ${srcDict} | grep -v '\\.\$' | iconv -f ${srcEncoding} -t ${dstEncoding} | LC_ALL=POSIX sort -u > ${tmpFile} &&"
    cmd += " java -cp ${classpath} org.languagetool.dev.SpellDictionaryBuilder"
    cmd += " uk-UA ${tmpFile} src/main/resources/org/languagetool/resource/uk/hunspell/uk_UA.info src/main/data/uk_wordlist.xml -o ${outFile}"

//    println cmd

    commandLine 'sh', '-c', "${cmd}"
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Ukrainian dictionary for LanguageTool',
                   'Implementation-Version': version
    }
}

processResources.dependsOn(createPOSDict, createSynthDict, createSpellDict)

publishing {
    repositories {
        mavenLocal()
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
